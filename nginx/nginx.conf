user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
	worker_connections  1024;
}

http {
	# comes with the image
	include       /etc/nginx/mime.types;

	# must match Dockerfile
	root          /data/www;
	default_type  application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
					  '$status $body_bytes_sent "$http_referer" '
					  '"$http_user_agent" "$http_x_forwarded_for"';

	access_log  /var/log/nginx/access.log  main;

	sendfile        on;
	#tcp_nopush     on;

	keepalive_timeout  65;

	# gzip
	# http://jvdc.me/fine-tune-gzip-compressing-and-enable-static-file-caching-on-nginx/
	# http://reinout.vanrees.org/weblog/2015/11/19/nginx-proxy-gzip.html
	# https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf
	# https://developers.google.com/speed/docs/insights/EnableCompression

	# Enable gzip compression.
	gzip on;

	# Compression level (1-9).
	# 5 is a perfect compromise between size and CPU usage, offering about
	# 75% reduction for most ASCII files (almost identical to level 9).
	gzip_comp_level    5;

	# Don't compress anything that's already small and unlikely to shrink much
	# if at all (the default is 20 bytes, which is bad as that usually leads to
	# larger files after gzipping).
	gzip_min_length    256;

	# Compress data even for clients that are connecting to us via proxies,
	# identified by the "Via" header (required for CloudFront).
	gzip_proxied       any;

	# Tell proxies to cache both the gzipped and regular version of a resource
	# whenever the client's Accept-Encoding capabilities header varies;
	# Avoids the issue where a non-gzip capable client (which is extremely rare
	# today) would display gibberish if their proxy gave them the gzipped version.
	gzip_vary          on;

	# Compress all output labeled with one of the following MIME-types.
	gzip_types
	  application/atom+xml
	  application/javascript
	  application/json
	  application/ld+json
	  application/manifest+json
	  application/rss+xml
	  application/vnd.geo+json
	  application/vnd.ms-fontobject
	  application/x-font-ttf
	  application/x-web-app-manifest+json
	  application/xhtml+xml
	  application/xml
	  font/opentype
	  image/bmp
	  image/svg+xml
	  image/x-icon
	  text/cache-manifest
	  text/css
	  text/plain
	  text/vcard
	  text/vnd.rim.location.xloc
	  text/vtt
	  text/x-component
	  text/x-cross-domain-policy;
	# text/html is always compressed by gzip module

	# This should be turned on if you are going to have pre-compressed copies (.gz) of
	# static files available. If not it should be left off as it will cause extra I/O
	# for the check. It is best if you enable this in a location{} block for
	# a specific directory, or on an individual server{} level.
	# gzip_static on;

	client_max_body_size 20M;

	server {
		server_name _;
		listen 80;
		
		location / {
			index index.html;

			try_files $uri $uri/ =404;
		}
	}
}
